//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.22 at 04:31:38 PM BST 
//


package com.prototype.ot.microservices.projectservice.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * The parameters that define the science performance required for this science goal.
 * 
 * <p>Java class for PerformanceParametersT complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PerformanceParametersT">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="desiredAngularResolution" type="{Alma/ValueTypes}UserAngleT"/>
 *         &lt;element name="desiredLargestScale" type="{Alma/ValueTypes}AngleT"/>
 *         &lt;element name="desiredSensitivity" type="{Alma/ValueTypes}UserSensitivityT"/>
 *         &lt;element name="desiredDynamicRange" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="representativeFrequency" type="{Alma/ValueTypes}FrequencyT" minOccurs="0"/>
 *         &lt;element name="useACA" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="isTimeConstrained" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="useTP" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="desiredSDSensitivity" type="{Alma/ValueTypes}UserSensitivityT" minOccurs="0"/>
 *         &lt;element name="isPointSource" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="desiredSensitivityReferenceFrequencyWidth" type="{Alma/ValueTypes}UserFrequencyT"/>
 *         &lt;element name="needsMoreTime" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="desiredACASensitivity" type="{Alma/ValueTypes}UserSensitivityT" minOccurs="0"/>
 *         &lt;element name="desiredTPSensitivity" type="{Alma/ValueTypes}UserSensitivityT" minOccurs="0"/>
 *         &lt;element name="isScheduleConstrained" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="desiredTime" type="{Alma/ValueTypes}TimeT" minOccurs="0"/>
 *         &lt;element name="acceptableAngularResolution" type="{Alma/ValueTypes}UserAngleT" minOccurs="0"/>
 *         &lt;element name="isSimultaneous12and7" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;choice>
 *           &lt;element name="MonitoringConstraint" type="{Alma/ObsPrep/ObsProject}MonitoringConstraintT" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="TemporalParameters" type="{Alma/ObsPrep/ObsProject}TemporalParametersT" maxOccurs="unbounded" minOccurs="0"/>
 *           &lt;element name="VisitConstraint" type="{Alma/ObsPrep/ObsProject}VisitConstraintT" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="desiredSensitivityFrequencyMeasure" default="RepresentativeWindowResolution">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="RepresentativeWindowBandWidth"/>
 *             &lt;enumeration value="RepresentativeWindowResolution"/>
 *             &lt;enumeration value="AggregateBandWidth"/>
 *             &lt;enumeration value="LargestWindowBandWidth"/>
 *             &lt;enumeration value="FinestResolution"/>
 *             &lt;enumeration value="User"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="timingConstraintsType">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="None"/>
 *             &lt;enumeration value="SpecificDates"/>
 *             &lt;enumeration value="MultipleVisits"/>
 *             &lt;enumeration value="ContinuousMonitoring"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="resolutionOption">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="Single"/>
 *             &lt;enumeration value="Range"/>
 *             &lt;enumeration value="Any"/>
 *             &lt;enumeration value="StandaloneACA"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PerformanceParametersT", namespace = "Alma/ObsPrep/ObsProject", propOrder = {
    "desiredAngularResolution",
    "desiredLargestScale",
    "desiredSensitivity",
    "desiredDynamicRange",
    "representativeFrequency",
    "useACA",
    "isTimeConstrained",
    "useTP",
    "desiredSDSensitivity",
    "isPointSource",
    "desiredSensitivityReferenceFrequencyWidth",
    "needsMoreTime",
    "desiredACASensitivity",
    "desiredTPSensitivity",
    "isScheduleConstrained",
    "desiredTime",
    "acceptableAngularResolution",
    "isSimultaneous12And7",
    "monitoringConstraint",
    "temporalParameters",
    "visitConstraint"
})
public class PerformanceParametersT {

    @XmlElement(required = true)
    protected UserAngleT desiredAngularResolution;
    @XmlElement(required = true)
    protected AngleT desiredLargestScale;
    @XmlElement(required = true)
    protected UserSensitivityT desiredSensitivity;
    protected double desiredDynamicRange;
    protected FrequencyT representativeFrequency;
    @XmlElement(defaultValue = "false")
    protected boolean useACA;
    @XmlElement(defaultValue = "false")
    protected boolean isTimeConstrained;
    @XmlElement(defaultValue = "false")
    protected boolean useTP;
    protected UserSensitivityT desiredSDSensitivity;
    @XmlElement(defaultValue = "false")
    protected boolean isPointSource;
    @XmlElement(required = true)
    protected UserFrequencyT desiredSensitivityReferenceFrequencyWidth;
    @XmlElement(defaultValue = "false")
    protected boolean needsMoreTime;
    protected UserSensitivityT desiredACASensitivity;
    protected UserSensitivityT desiredTPSensitivity;
    @XmlElement(defaultValue = "false")
    protected Boolean isScheduleConstrained;
    protected TimeT desiredTime;
    protected UserAngleT acceptableAngularResolution;
    @XmlElement(name = "isSimultaneous12and7", defaultValue = "false")
    protected Boolean isSimultaneous12And7;
    @XmlElement(name = "MonitoringConstraint")
    protected List<MonitoringConstraintT> monitoringConstraint;
    @XmlElement(name = "TemporalParameters")
    protected List<TemporalParametersT> temporalParameters;
    @XmlElement(name = "VisitConstraint")
    protected List<VisitConstraintT> visitConstraint;
    @XmlAttribute(name = "desiredSensitivityFrequencyMeasure")
    protected String desiredSensitivityFrequencyMeasure;
    @XmlAttribute(name = "timingConstraintsType")
    protected String timingConstraintsType;
    @XmlAttribute(name = "resolutionOption")
    protected String resolutionOption;

    /**
     * Gets the value of the desiredAngularResolution property.
     * 
     * @return
     *     possible object is
     *     {@link UserAngleT }
     *     
     */
    public UserAngleT getDesiredAngularResolution() {
        return desiredAngularResolution;
    }

    /**
     * Sets the value of the desiredAngularResolution property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserAngleT }
     *     
     */
    public void setDesiredAngularResolution(UserAngleT value) {
        this.desiredAngularResolution = value;
    }

    /**
     * Gets the value of the desiredLargestScale property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getDesiredLargestScale() {
        return desiredLargestScale;
    }

    /**
     * Sets the value of the desiredLargestScale property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setDesiredLargestScale(AngleT value) {
        this.desiredLargestScale = value;
    }

    /**
     * Gets the value of the desiredSensitivity property.
     * 
     * @return
     *     possible object is
     *     {@link UserSensitivityT }
     *     
     */
    public UserSensitivityT getDesiredSensitivity() {
        return desiredSensitivity;
    }

    /**
     * Sets the value of the desiredSensitivity property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserSensitivityT }
     *     
     */
    public void setDesiredSensitivity(UserSensitivityT value) {
        this.desiredSensitivity = value;
    }

    /**
     * Gets the value of the desiredDynamicRange property.
     * 
     */
    public double getDesiredDynamicRange() {
        return desiredDynamicRange;
    }

    /**
     * Sets the value of the desiredDynamicRange property.
     * 
     */
    public void setDesiredDynamicRange(double value) {
        this.desiredDynamicRange = value;
    }

    /**
     * Gets the value of the representativeFrequency property.
     * 
     * @return
     *     possible object is
     *     {@link FrequencyT }
     *     
     */
    public FrequencyT getRepresentativeFrequency() {
        return representativeFrequency;
    }

    /**
     * Sets the value of the representativeFrequency property.
     * 
     * @param value
     *     allowed object is
     *     {@link FrequencyT }
     *     
     */
    public void setRepresentativeFrequency(FrequencyT value) {
        this.representativeFrequency = value;
    }

    /**
     * Gets the value of the useACA property.
     * 
     */
    public boolean isUseACA() {
        return useACA;
    }

    /**
     * Sets the value of the useACA property.
     * 
     */
    public void setUseACA(boolean value) {
        this.useACA = value;
    }

    /**
     * Gets the value of the isTimeConstrained property.
     * 
     */
    public boolean isIsTimeConstrained() {
        return isTimeConstrained;
    }

    /**
     * Sets the value of the isTimeConstrained property.
     * 
     */
    public void setIsTimeConstrained(boolean value) {
        this.isTimeConstrained = value;
    }

    /**
     * Gets the value of the useTP property.
     * 
     */
    public boolean isUseTP() {
        return useTP;
    }

    /**
     * Sets the value of the useTP property.
     * 
     */
    public void setUseTP(boolean value) {
        this.useTP = value;
    }

    /**
     * Gets the value of the desiredSDSensitivity property.
     * 
     * @return
     *     possible object is
     *     {@link UserSensitivityT }
     *     
     */
    public UserSensitivityT getDesiredSDSensitivity() {
        return desiredSDSensitivity;
    }

    /**
     * Sets the value of the desiredSDSensitivity property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserSensitivityT }
     *     
     */
    public void setDesiredSDSensitivity(UserSensitivityT value) {
        this.desiredSDSensitivity = value;
    }

    /**
     * Gets the value of the isPointSource property.
     * 
     */
    public boolean isIsPointSource() {
        return isPointSource;
    }

    /**
     * Sets the value of the isPointSource property.
     * 
     */
    public void setIsPointSource(boolean value) {
        this.isPointSource = value;
    }

    /**
     * Gets the value of the desiredSensitivityReferenceFrequencyWidth property.
     * 
     * @return
     *     possible object is
     *     {@link UserFrequencyT }
     *     
     */
    public UserFrequencyT getDesiredSensitivityReferenceFrequencyWidth() {
        return desiredSensitivityReferenceFrequencyWidth;
    }

    /**
     * Sets the value of the desiredSensitivityReferenceFrequencyWidth property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserFrequencyT }
     *     
     */
    public void setDesiredSensitivityReferenceFrequencyWidth(UserFrequencyT value) {
        this.desiredSensitivityReferenceFrequencyWidth = value;
    }

    /**
     * Gets the value of the needsMoreTime property.
     * 
     */
    public boolean isNeedsMoreTime() {
        return needsMoreTime;
    }

    /**
     * Sets the value of the needsMoreTime property.
     * 
     */
    public void setNeedsMoreTime(boolean value) {
        this.needsMoreTime = value;
    }

    /**
     * Gets the value of the desiredACASensitivity property.
     * 
     * @return
     *     possible object is
     *     {@link UserSensitivityT }
     *     
     */
    public UserSensitivityT getDesiredACASensitivity() {
        return desiredACASensitivity;
    }

    /**
     * Sets the value of the desiredACASensitivity property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserSensitivityT }
     *     
     */
    public void setDesiredACASensitivity(UserSensitivityT value) {
        this.desiredACASensitivity = value;
    }

    /**
     * Gets the value of the desiredTPSensitivity property.
     * 
     * @return
     *     possible object is
     *     {@link UserSensitivityT }
     *     
     */
    public UserSensitivityT getDesiredTPSensitivity() {
        return desiredTPSensitivity;
    }

    /**
     * Sets the value of the desiredTPSensitivity property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserSensitivityT }
     *     
     */
    public void setDesiredTPSensitivity(UserSensitivityT value) {
        this.desiredTPSensitivity = value;
    }

    /**
     * Gets the value of the isScheduleConstrained property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsScheduleConstrained() {
        return isScheduleConstrained;
    }

    /**
     * Sets the value of the isScheduleConstrained property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsScheduleConstrained(Boolean value) {
        this.isScheduleConstrained = value;
    }

    /**
     * Gets the value of the desiredTime property.
     * 
     * @return
     *     possible object is
     *     {@link TimeT }
     *     
     */
    public TimeT getDesiredTime() {
        return desiredTime;
    }

    /**
     * Sets the value of the desiredTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link TimeT }
     *     
     */
    public void setDesiredTime(TimeT value) {
        this.desiredTime = value;
    }

    /**
     * Gets the value of the acceptableAngularResolution property.
     * 
     * @return
     *     possible object is
     *     {@link UserAngleT }
     *     
     */
    public UserAngleT getAcceptableAngularResolution() {
        return acceptableAngularResolution;
    }

    /**
     * Sets the value of the acceptableAngularResolution property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserAngleT }
     *     
     */
    public void setAcceptableAngularResolution(UserAngleT value) {
        this.acceptableAngularResolution = value;
    }

    /**
     * Gets the value of the isSimultaneous12And7 property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsSimultaneous12And7() {
        return isSimultaneous12And7;
    }

    /**
     * Sets the value of the isSimultaneous12And7 property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsSimultaneous12And7(Boolean value) {
        this.isSimultaneous12And7 = value;
    }

    /**
     * Gets the value of the monitoringConstraint property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the monitoringConstraint property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMonitoringConstraint().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MonitoringConstraintT }
     * 
     * 
     */
    public List<MonitoringConstraintT> getMonitoringConstraint() {
        if (monitoringConstraint == null) {
            monitoringConstraint = new ArrayList<MonitoringConstraintT>();
        }
        return this.monitoringConstraint;
    }

    /**
     * Gets the value of the temporalParameters property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the temporalParameters property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTemporalParameters().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TemporalParametersT }
     * 
     * 
     */
    public List<TemporalParametersT> getTemporalParameters() {
        if (temporalParameters == null) {
            temporalParameters = new ArrayList<TemporalParametersT>();
        }
        return this.temporalParameters;
    }

    /**
     * Gets the value of the visitConstraint property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the visitConstraint property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVisitConstraint().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VisitConstraintT }
     * 
     * 
     */
    public List<VisitConstraintT> getVisitConstraint() {
        if (visitConstraint == null) {
            visitConstraint = new ArrayList<VisitConstraintT>();
        }
        return this.visitConstraint;
    }

    /**
     * Gets the value of the desiredSensitivityFrequencyMeasure property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDesiredSensitivityFrequencyMeasure() {
        if (desiredSensitivityFrequencyMeasure == null) {
            return "RepresentativeWindowResolution";
        } else {
            return desiredSensitivityFrequencyMeasure;
        }
    }

    /**
     * Sets the value of the desiredSensitivityFrequencyMeasure property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDesiredSensitivityFrequencyMeasure(String value) {
        this.desiredSensitivityFrequencyMeasure = value;
    }

    /**
     * Gets the value of the timingConstraintsType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTimingConstraintsType() {
        return timingConstraintsType;
    }

    /**
     * Sets the value of the timingConstraintsType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTimingConstraintsType(String value) {
        this.timingConstraintsType = value;
    }

    /**
     * Gets the value of the resolutionOption property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getResolutionOption() {
        return resolutionOption;
    }

    /**
     * Sets the value of the resolutionOption property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setResolutionOption(String value) {
        this.resolutionOption = value;
    }

}
