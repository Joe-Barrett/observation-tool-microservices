//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.22 at 04:31:38 PM BST 
//


package com.prototype.ot.microservices.projectservice.model;

import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * The pattern to be used in observing the target, be it scientific or calibration. Note that this class must be subclassed, as it is abstract.
 * 
 * <p>Java class for FieldPatternT complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FieldPatternT">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *       &lt;/sequence>
 *       &lt;attribute name="type" default="point">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="point"/>
 *             &lt;enumeration value="circle"/>
 *             &lt;enumeration value="rectangle"/>
 *             &lt;enumeration value="spiral"/>
 *             &lt;enumeration value="cross"/>
 *             &lt;enumeration value="fill"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FieldPatternT")
@XmlSeeAlso({
    PointingPatternT.class,
    RectanglePatternT.class,
    FillPatternT.class,
    CrossPatternT.class
})
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME)
@JsonSubTypes({
        @JsonSubTypes.Type(value = PointingPatternT.class, name = "PointingPatternT"),
        @JsonSubTypes.Type(value = RectanglePatternT.class, name = "RectanglePatternT"),
        @JsonSubTypes.Type(value = FillPatternT.class, name = "FillPatternT"),
        @JsonSubTypes.Type(value = CrossPatternT.class, name = "CrossPatternT")
})
public abstract class FieldPatternT {

    @XmlAttribute(name = "type")
    private String type;

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        if (type == null) {
            return "point";
        } else {
            return type;
        }
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

}
