/*
 * ALMA - Atacama Large Millimeter Array
 * Copyright (c) UKATC - UK Astronomy Technology Centre, Science and Technology Facilities Council, 2018
 * (in the framework of the ALMA collaboration).
 * All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.22 at 04:31:38 PM BST 
//


package com.prototype.ot.microservices.projectservice.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * The target definition. Contains references to specifications for the spectral setup (or optical camera) and the field (spatial) setup and any attached observing parameters.
 * 
 * <p>Java class for TargetT complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TargetT">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="AbstractInstrumentSpecRef" type="{Alma/ObsPrep/SchedBlock}SchedBlockRefT" minOccurs="0"/>
 *         &lt;element name="FieldSourceRef" type="{Alma/ObsPrep/SchedBlock}SchedBlockRefT"/>
 *         &lt;element name="ObservingParametersRef" type="{Alma/ObsPrep/SchedBlock}SchedBlockRefT" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="entityPartId" type="{Alma/CommonEntity}EntityPartIdT" />
 *       &lt;attribute name="almatype" use="required" type="{http://www.w3.org/2001/XMLSchema}string" fixed="APDM::Target" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TargetT", propOrder = {
    "abstractInstrumentSpecRef",
    "fieldSourceRef",
    "observingParametersRef"
})
public class TargetT {

    @XmlElement(name = "AbstractInstrumentSpecRef")
    private SchedBlockRefT abstractInstrumentSpecRef;
    @XmlElement(name = "FieldSourceRef", required = true)
    private SchedBlockRefT fieldSourceRef;
    @XmlElement(name = "ObservingParametersRef")
    private List<SchedBlockRefT> observingParametersRef;
    @XmlAttribute(name = "entityPartId")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    private String entityPartId;
    @XmlAttribute(name = "almatype", required = true)
    private String almatype;

    /**
     * Gets the value of the abstractInstrumentSpecRef property.
     * 
     * @return
     *     possible object is
     *     {@link SchedBlockRefT }
     *     
     */
    public SchedBlockRefT getAbstractInstrumentSpecRef() {
        return abstractInstrumentSpecRef;
    }

    /**
     * Sets the value of the abstractInstrumentSpecRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchedBlockRefT }
     *     
     */
    public void setAbstractInstrumentSpecRef(SchedBlockRefT value) {
        this.abstractInstrumentSpecRef = value;
    }

    /**
     * Gets the value of the fieldSourceRef property.
     * 
     * @return
     *     possible object is
     *     {@link SchedBlockRefT }
     *     
     */
    public SchedBlockRefT getFieldSourceRef() {
        return fieldSourceRef;
    }

    /**
     * Sets the value of the fieldSourceRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchedBlockRefT }
     *     
     */
    public void setFieldSourceRef(SchedBlockRefT value) {
        this.fieldSourceRef = value;
    }

    /**
     * Gets the value of the observingParametersRef property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the observingParametersRef property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getObservingParametersRef().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchedBlockRefT }
     * 
     * 
     */
    public List<SchedBlockRefT> getObservingParametersRef() {
        if (observingParametersRef == null) {
            observingParametersRef = new ArrayList<>();
        }
        return this.observingParametersRef;
    }

    /**
     * Gets the value of the entityPartId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEntityPartId() {
        return entityPartId;
    }

    /**
     * Sets the value of the entityPartId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEntityPartId(String value) {
        this.entityPartId = value;
    }

    /**
     * Gets the value of the almatype property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAlmatype() {
        if (almatype == null) {
            return "APDM::Target";
        } else {
            return almatype;
        }
    }

    /**
     * Sets the value of the almatype property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAlmatype(String value) {
        this.almatype = value;
    }

}
