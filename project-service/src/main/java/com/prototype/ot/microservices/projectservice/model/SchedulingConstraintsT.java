//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.22 at 04:31:38 PM BST 
//


package com.prototype.ot.microservices.projectservice.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Outlines some desired goals for this schedblock to be used by the scheduler as constraints in determining when to schedule the SB and when to deem it complete (following repeats). The class will have one of the Targets associated as a representative target - this is the target the goals are for.
 * 
 * <p>Java class for SchedulingConstraintsT complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SchedulingConstraintsT">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="representativeFrequency" type="{Alma/ValueTypes}FrequencyT"/>
 *         &lt;element name="minAcceptableAngResolution" type="{Alma/ValueTypes}AngleT"/>
 *         &lt;element name="maxAcceptableAngResolution" type="{Alma/ValueTypes}AngleT"/>
 *         &lt;element name="dynamicRange" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="representativeCoordinates" type="{Alma/ValueTypes}SkyCoordinatesT"/>
 *         &lt;element name="requiredReceiverBands" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="nominalConfiguration" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="scienceGoalDesiredResolution" type="{Alma/ValueTypes}AngleT" minOccurs="0"/>
 *         &lt;element name="scienceGoalLargestAngularScale" type="{Alma/ValueTypes}AngleT" minOccurs="0"/>
 *         &lt;element name="isSimultaneous" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="simultaneousSbUid" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="representativeTargetRef" type="{Alma/ObsPrep/SchedBlock}SchedBlockRefT" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="representativeReceiverBand">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="ALMA_RB_01"/>
 *             &lt;enumeration value="ALMA_RB_02"/>
 *             &lt;enumeration value="ALMA_RB_03"/>
 *             &lt;enumeration value="ALMA_RB_04"/>
 *             &lt;enumeration value="ALMA_RB_05"/>
 *             &lt;enumeration value="ALMA_RB_06"/>
 *             &lt;enumeration value="ALMA_RB_07"/>
 *             &lt;enumeration value="ALMA_RB_08"/>
 *             &lt;enumeration value="ALMA_RB_09"/>
 *             &lt;enumeration value="ALMA_RB_10"/>
 *             &lt;enumeration value="UNDEFINED"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SchedulingConstraintsT", propOrder = {
    "representativeFrequency",
    "minAcceptableAngResolution",
    "maxAcceptableAngResolution",
    "dynamicRange",
    "representativeCoordinates",
    "requiredReceiverBands",
    "nominalConfiguration",
    "scienceGoalDesiredResolution",
    "scienceGoalLargestAngularScale",
    "isSimultaneous",
    "simultaneousSbUid",
    "representativeTargetRef"
})
public class SchedulingConstraintsT {

    @XmlElement(required = true)
    protected FrequencyT representativeFrequency;
    @XmlElement(required = true)
    protected AngleT minAcceptableAngResolution;
    @XmlElement(required = true)
    protected AngleT maxAcceptableAngResolution;
    protected double dynamicRange;
    @XmlElement(required = true)
    protected SkyCoordinatesT representativeCoordinates;
    protected List<String> requiredReceiverBands;
    protected List<String> nominalConfiguration;
    protected AngleT scienceGoalDesiredResolution;
    protected AngleT scienceGoalLargestAngularScale;
    @XmlElement(defaultValue = "false")
    protected Boolean isSimultaneous;
    protected List<String> simultaneousSbUid;
    protected SchedBlockRefT representativeTargetRef;
    @XmlAttribute(name = "representativeReceiverBand")
    protected String representativeReceiverBand;

    /**
     * Gets the value of the representativeFrequency property.
     * 
     * @return
     *     possible object is
     *     {@link FrequencyT }
     *     
     */
    public FrequencyT getRepresentativeFrequency() {
        return representativeFrequency;
    }

    /**
     * Sets the value of the representativeFrequency property.
     * 
     * @param value
     *     allowed object is
     *     {@link FrequencyT }
     *     
     */
    public void setRepresentativeFrequency(FrequencyT value) {
        this.representativeFrequency = value;
    }

    /**
     * Gets the value of the minAcceptableAngResolution property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getMinAcceptableAngResolution() {
        return minAcceptableAngResolution;
    }

    /**
     * Sets the value of the minAcceptableAngResolution property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setMinAcceptableAngResolution(AngleT value) {
        this.minAcceptableAngResolution = value;
    }

    /**
     * Gets the value of the maxAcceptableAngResolution property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getMaxAcceptableAngResolution() {
        return maxAcceptableAngResolution;
    }

    /**
     * Sets the value of the maxAcceptableAngResolution property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setMaxAcceptableAngResolution(AngleT value) {
        this.maxAcceptableAngResolution = value;
    }

    /**
     * Gets the value of the dynamicRange property.
     * 
     */
    public double getDynamicRange() {
        return dynamicRange;
    }

    /**
     * Sets the value of the dynamicRange property.
     * 
     */
    public void setDynamicRange(double value) {
        this.dynamicRange = value;
    }

    /**
     * Gets the value of the representativeCoordinates property.
     * 
     * @return
     *     possible object is
     *     {@link SkyCoordinatesT }
     *     
     */
    public SkyCoordinatesT getRepresentativeCoordinates() {
        return representativeCoordinates;
    }

    /**
     * Sets the value of the representativeCoordinates property.
     * 
     * @param value
     *     allowed object is
     *     {@link SkyCoordinatesT }
     *     
     */
    public void setRepresentativeCoordinates(SkyCoordinatesT value) {
        this.representativeCoordinates = value;
    }

    /**
     * Gets the value of the requiredReceiverBands property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the requiredReceiverBands property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRequiredReceiverBands().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getRequiredReceiverBands() {
        if (requiredReceiverBands == null) {
            requiredReceiverBands = new ArrayList<String>();
        }
        return this.requiredReceiverBands;
    }

    /**
     * Gets the value of the nominalConfiguration property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nominalConfiguration property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNominalConfiguration().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getNominalConfiguration() {
        if (nominalConfiguration == null) {
            nominalConfiguration = new ArrayList<String>();
        }
        return this.nominalConfiguration;
    }

    /**
     * Gets the value of the scienceGoalDesiredResolution property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getScienceGoalDesiredResolution() {
        return scienceGoalDesiredResolution;
    }

    /**
     * Sets the value of the scienceGoalDesiredResolution property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setScienceGoalDesiredResolution(AngleT value) {
        this.scienceGoalDesiredResolution = value;
    }

    /**
     * Gets the value of the scienceGoalLargestAngularScale property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getScienceGoalLargestAngularScale() {
        return scienceGoalLargestAngularScale;
    }

    /**
     * Sets the value of the scienceGoalLargestAngularScale property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setScienceGoalLargestAngularScale(AngleT value) {
        this.scienceGoalLargestAngularScale = value;
    }

    /**
     * Gets the value of the isSimultaneous property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsSimultaneous() {
        return isSimultaneous;
    }

    /**
     * Sets the value of the isSimultaneous property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsSimultaneous(Boolean value) {
        this.isSimultaneous = value;
    }

    /**
     * Gets the value of the simultaneousSbUid property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the simultaneousSbUid property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSimultaneousSbUid().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getSimultaneousSbUid() {
        if (simultaneousSbUid == null) {
            simultaneousSbUid = new ArrayList<String>();
        }
        return this.simultaneousSbUid;
    }

    /**
     * Gets the value of the representativeTargetRef property.
     * 
     * @return
     *     possible object is
     *     {@link SchedBlockRefT }
     *     
     */
    public SchedBlockRefT getRepresentativeTargetRef() {
        return representativeTargetRef;
    }

    /**
     * Sets the value of the representativeTargetRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link SchedBlockRefT }
     *     
     */
    public void setRepresentativeTargetRef(SchedBlockRefT value) {
        this.representativeTargetRef = value;
    }

    /**
     * Gets the value of the representativeReceiverBand property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRepresentativeReceiverBand() {
        return representativeReceiverBand;
    }

    /**
     * Sets the value of the representativeReceiverBand property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRepresentativeReceiverBand(String value) {
        this.representativeReceiverBand = value;
    }

}
