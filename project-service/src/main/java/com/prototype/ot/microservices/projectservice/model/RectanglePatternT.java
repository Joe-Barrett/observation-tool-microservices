//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.22 at 04:31:38 PM BST 
//


package com.prototype.ot.microservices.projectservice.model;

import com.prototype.ot.microservices.projectservice.model.valuetypes.AngleT;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * General definition of a rectangular pattern that can be used to geometrically define raster and OTF observing modes.
 * 
 * <p>Java class for RectanglePatternT complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RectanglePatternT">
 *   &lt;complexContent>
 *     &lt;extension base="{Alma/ObsPrep/SchedBlock}FieldPatternT">
 *       &lt;sequence>
 *         &lt;element name="patternCenterCoordinates" type="{Alma/ValueTypes}SkyCoordinatesT"/>
 *         &lt;element name="longitudeLength" type="{Alma/ValueTypes}AngleT"/>
 *         &lt;element name="latitudeLength" type="{Alma/ValueTypes}AngleT"/>
 *         &lt;element name="orthogonalStep" type="{Alma/ValueTypes}AngleT"/>
 *         &lt;element name="orientation" type="{Alma/ValueTypes}AngleT"/>
 *         &lt;element name="uniDirectionalScan" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *       &lt;/sequence>
 *       &lt;attribute name="scanDirection" default="longitude">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="longitude"/>
 *             &lt;enumeration value="latitude"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="scanningCoordinateSystem" default="azel">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="J2000"/>
 *             &lt;enumeration value="galactic"/>
 *             &lt;enumeration value="ecliptic"/>
 *             &lt;enumeration value="azel"/>
 *             &lt;enumeration value="ICRS"/>
 *             &lt;enumeration value="horizon"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RectanglePatternT", propOrder = {
    "patternCenterCoordinates",
    "longitudeLength",
    "latitudeLength",
    "orthogonalStep",
    "orientation",
    "uniDirectionalScan"
})
public class RectanglePatternT
    extends FieldPatternT
{

    @XmlElement(required = true)
    protected SkyCoordinatesT patternCenterCoordinates;
    @XmlElement(required = true)
    protected AngleT longitudeLength;
    @XmlElement(required = true)
    protected AngleT latitudeLength;
    @XmlElement(required = true)
    protected AngleT orthogonalStep;
    @XmlElement(required = true)
    protected AngleT orientation;
    @XmlElement(defaultValue = "false")
    protected boolean uniDirectionalScan;
    @XmlAttribute(name = "scanDirection")
    protected String scanDirection;
    @XmlAttribute(name = "scanningCoordinateSystem")
    protected String scanningCoordinateSystem;

    /**
     * Gets the value of the patternCenterCoordinates property.
     * 
     * @return
     *     possible object is
     *     {@link SkyCoordinatesT }
     *     
     */
    public SkyCoordinatesT getPatternCenterCoordinates() {
        return patternCenterCoordinates;
    }

    /**
     * Sets the value of the patternCenterCoordinates property.
     * 
     * @param value
     *     allowed object is
     *     {@link SkyCoordinatesT }
     *     
     */
    public void setPatternCenterCoordinates(SkyCoordinatesT value) {
        this.patternCenterCoordinates = value;
    }

    /**
     * Gets the value of the longitudeLength property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getLongitudeLength() {
        return longitudeLength;
    }

    /**
     * Sets the value of the longitudeLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setLongitudeLength(AngleT value) {
        this.longitudeLength = value;
    }

    /**
     * Gets the value of the latitudeLength property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getLatitudeLength() {
        return latitudeLength;
    }

    /**
     * Sets the value of the latitudeLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setLatitudeLength(AngleT value) {
        this.latitudeLength = value;
    }

    /**
     * Gets the value of the orthogonalStep property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getOrthogonalStep() {
        return orthogonalStep;
    }

    /**
     * Sets the value of the orthogonalStep property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setOrthogonalStep(AngleT value) {
        this.orthogonalStep = value;
    }

    /**
     * Gets the value of the orientation property.
     * 
     * @return
     *     possible object is
     *     {@link AngleT }
     *     
     */
    public AngleT getOrientation() {
        return orientation;
    }

    /**
     * Sets the value of the orientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link AngleT }
     *     
     */
    public void setOrientation(AngleT value) {
        this.orientation = value;
    }

    /**
     * Gets the value of the uniDirectionalScan property.
     * 
     */
    public boolean isUniDirectionalScan() {
        return uniDirectionalScan;
    }

    /**
     * Sets the value of the uniDirectionalScan property.
     * 
     */
    public void setUniDirectionalScan(boolean value) {
        this.uniDirectionalScan = value;
    }

    /**
     * Gets the value of the scanDirection property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getScanDirection() {
        if (scanDirection == null) {
            return "longitude";
        } else {
            return scanDirection;
        }
    }

    /**
     * Sets the value of the scanDirection property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setScanDirection(String value) {
        this.scanDirection = value;
    }

    /**
     * Gets the value of the scanningCoordinateSystem property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getScanningCoordinateSystem() {
        if (scanningCoordinateSystem == null) {
            return "azel";
        } else {
            return scanningCoordinateSystem;
        }
    }

    /**
     * Sets the value of the scanningCoordinateSystem property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setScanningCoordinateSystem(String value) {
        this.scanningCoordinateSystem = value;
    }

}
