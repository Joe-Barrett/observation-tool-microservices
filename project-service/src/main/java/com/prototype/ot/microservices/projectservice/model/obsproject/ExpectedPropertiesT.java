//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.05.22 at 04:31:38 PM BST 
//


package com.prototype.ot.microservices.projectservice.model.obsproject;

import com.prototype.ot.microservices.projectservice.model.valuetypes.FluxT;
import com.prototype.ot.microservices.projectservice.model.valuetypes.FrequencyT;
import com.prototype.ot.microservices.projectservice.model.valuetypes.UserFrequencyT;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * The properties of this source that are expected to be measured. Mostly for technical assessment and validation of the observing requested.
 * 
 * <p>Java class for ExpectedPropertiesT complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ExpectedPropertiesT">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="expectedPeakFluxDensity" type="{Alma/ValueTypes}FluxT"/>
 *         &lt;element name="desiredPolarizationPercentage" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="expectedLineWidth" type="{Alma/ValueTypes}UserFrequencyT"/>
 *         &lt;element name="referenceFrequency" type="{Alma/ValueTypes}FrequencyT"/>
 *         &lt;element name="expectedPeakLineFluxDensity" type="{Alma/ValueTypes}FluxT"/>
 *         &lt;element name="expectedSpectralDynamicRange" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="expectedImageDynamicRange" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="desiredLinePolarizationPercentage" type="{http://www.w3.org/2001/XMLSchema}double" minOccurs="0"/>
 *         &lt;element name="desiredLineCircularPolarizationPercentage" type="{http://www.w3.org/2001/XMLSchema}double" minOccurs="0"/>
 *         &lt;element name="desiredCircularPolarizationPercentage" type="{http://www.w3.org/2001/XMLSchema}double" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="solarActivityLevel" default="None">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *             &lt;enumeration value="None"/>
 *             &lt;enumeration value="QuietSun"/>
 *             &lt;enumeration value="ActiveSun"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ExpectedPropertiesT", namespace = "Alma/ObsPrep/ObsProject", propOrder = {
    "expectedPeakFluxDensity",
    "desiredPolarizationPercentage",
    "expectedLineWidth",
    "referenceFrequency",
    "expectedPeakLineFluxDensity",
    "expectedSpectralDynamicRange",
    "expectedImageDynamicRange",
    "desiredLinePolarizationPercentage",
    "desiredLineCircularPolarizationPercentage",
    "desiredCircularPolarizationPercentage"
})
public class ExpectedPropertiesT {

    @XmlElement(required = true)
    protected FluxT expectedPeakFluxDensity;
    protected double desiredPolarizationPercentage;
    @XmlElement(required = true)
    protected UserFrequencyT expectedLineWidth;
    @XmlElement(required = true)
    protected FrequencyT referenceFrequency;
    @XmlElement(required = true)
    protected FluxT expectedPeakLineFluxDensity;
    @XmlElement(defaultValue = "0.0")
    protected double expectedSpectralDynamicRange;
    @XmlElement(defaultValue = "0.0")
    protected double expectedImageDynamicRange;
    @XmlElement(defaultValue = "0.0")
    protected Double desiredLinePolarizationPercentage;
    @XmlElement(defaultValue = "0.0")
    protected Double desiredLineCircularPolarizationPercentage;
    @XmlElement(defaultValue = "0.0")
    protected Double desiredCircularPolarizationPercentage;
    @XmlAttribute(name = "solarActivityLevel")
    protected String solarActivityLevel;

    /**
     * Gets the value of the expectedPeakFluxDensity property.
     * 
     * @return
     *     possible object is
     *     {@link FluxT }
     *     
     */
    public FluxT getExpectedPeakFluxDensity() {
        return expectedPeakFluxDensity;
    }

    /**
     * Sets the value of the expectedPeakFluxDensity property.
     * 
     * @param value
     *     allowed object is
     *     {@link FluxT }
     *     
     */
    public void setExpectedPeakFluxDensity(FluxT value) {
        this.expectedPeakFluxDensity = value;
    }

    /**
     * Gets the value of the desiredPolarizationPercentage property.
     * 
     */
    public double getDesiredPolarizationPercentage() {
        return desiredPolarizationPercentage;
    }

    /**
     * Sets the value of the desiredPolarizationPercentage property.
     * 
     */
    public void setDesiredPolarizationPercentage(double value) {
        this.desiredPolarizationPercentage = value;
    }

    /**
     * Gets the value of the expectedLineWidth property.
     * 
     * @return
     *     possible object is
     *     {@link UserFrequencyT }
     *     
     */
    public UserFrequencyT getExpectedLineWidth() {
        return expectedLineWidth;
    }

    /**
     * Sets the value of the expectedLineWidth property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserFrequencyT }
     *     
     */
    public void setExpectedLineWidth(UserFrequencyT value) {
        this.expectedLineWidth = value;
    }

    /**
     * Gets the value of the referenceFrequency property.
     * 
     * @return
     *     possible object is
     *     {@link FrequencyT }
     *     
     */
    public FrequencyT getReferenceFrequency() {
        return referenceFrequency;
    }

    /**
     * Sets the value of the referenceFrequency property.
     * 
     * @param value
     *     allowed object is
     *     {@link FrequencyT }
     *     
     */
    public void setReferenceFrequency(FrequencyT value) {
        this.referenceFrequency = value;
    }

    /**
     * Gets the value of the expectedPeakLineFluxDensity property.
     * 
     * @return
     *     possible object is
     *     {@link FluxT }
     *     
     */
    public FluxT getExpectedPeakLineFluxDensity() {
        return expectedPeakLineFluxDensity;
    }

    /**
     * Sets the value of the expectedPeakLineFluxDensity property.
     * 
     * @param value
     *     allowed object is
     *     {@link FluxT }
     *     
     */
    public void setExpectedPeakLineFluxDensity(FluxT value) {
        this.expectedPeakLineFluxDensity = value;
    }

    /**
     * Gets the value of the expectedSpectralDynamicRange property.
     * 
     */
    public double getExpectedSpectralDynamicRange() {
        return expectedSpectralDynamicRange;
    }

    /**
     * Sets the value of the expectedSpectralDynamicRange property.
     * 
     */
    public void setExpectedSpectralDynamicRange(double value) {
        this.expectedSpectralDynamicRange = value;
    }

    /**
     * Gets the value of the expectedImageDynamicRange property.
     * 
     */
    public double getExpectedImageDynamicRange() {
        return expectedImageDynamicRange;
    }

    /**
     * Sets the value of the expectedImageDynamicRange property.
     * 
     */
    public void setExpectedImageDynamicRange(double value) {
        this.expectedImageDynamicRange = value;
    }

    /**
     * Gets the value of the desiredLinePolarizationPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getDesiredLinePolarizationPercentage() {
        return desiredLinePolarizationPercentage;
    }

    /**
     * Sets the value of the desiredLinePolarizationPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setDesiredLinePolarizationPercentage(Double value) {
        this.desiredLinePolarizationPercentage = value;
    }

    /**
     * Gets the value of the desiredLineCircularPolarizationPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getDesiredLineCircularPolarizationPercentage() {
        return desiredLineCircularPolarizationPercentage;
    }

    /**
     * Sets the value of the desiredLineCircularPolarizationPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setDesiredLineCircularPolarizationPercentage(Double value) {
        this.desiredLineCircularPolarizationPercentage = value;
    }

    /**
     * Gets the value of the desiredCircularPolarizationPercentage property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getDesiredCircularPolarizationPercentage() {
        return desiredCircularPolarizationPercentage;
    }

    /**
     * Sets the value of the desiredCircularPolarizationPercentage property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setDesiredCircularPolarizationPercentage(Double value) {
        this.desiredCircularPolarizationPercentage = value;
    }

    /**
     * Gets the value of the solarActivityLevel property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSolarActivityLevel() {
        if (solarActivityLevel == null) {
            return "None";
        } else {
            return solarActivityLevel;
        }
    }

    /**
     * Sets the value of the solarActivityLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSolarActivityLevel(String value) {
        this.solarActivityLevel = value;
    }

}
